learningrate:  0.0005
grad_encode:  0
gradAE_train:  0
deactivate_grad_train_after_num_epochs:  20
Getting the metadata host:  169.254.123.142
Getting the metadata port:  10087
Getting the metadata batchsize:  64
Autoencoder:  0
count_flops:  0
autoencoder_train:  0
deactivate_train_after_num_epochs:  20
(1000, 12)
(19267, 1000, 12) (19267, 5) (2163, 1000, 12) (2163, 5)
G:\Anaconda\envs\Medical-MESL\lib\site-packages\sklearn\base.py:324: UserWarning: Trying to unpickle estimator StandardScaler from version 0.23.2 when using version 1.0.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(
training on gpu
training on, cuda:0
Start Client
Start Optimizer
Start loss calcu
Start socket connect
Socket connect success, to. 169.254.123.142 10087
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
G:\Anaconda\envs\Medical-MESL\lib\site-packages\sklearn\metrics\_classification.py:1308: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
Output:  torch.Size([64, 192, 62])
Input:  torch.Size([64, 12, 1000])
